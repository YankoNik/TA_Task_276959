DROP PROCEDURE IF EXISTS SP_CASH_PAYMENTS_PREPARE_CONDITIONS_TABLE
GO

CREATE PROCEDURE SP_CASH_PAYMENTS_PREPARE_CONDITIONS_TABLE
(
	@CurrAccountDate	DateTime
,	@TestCaceTypes		nvarchar(64) = N'%CashPaymentCA%BETA%'	
,	@RowID				int = NULL
)
AS 
BEGIN

	/************************************************************************************************************/
	/* 1. Init nomenclatures: */
	/* 1.1 Вид на идентификатора: [DT015_CUSTOMERS_ACTIONS_TA].[EGFN_TYPE]: enum DetailedTypeOfIdentifier : [DT015_CUSTOMERS].[IDENTIFIER_TYPE] */
	DROP TABLE IF EXISTS #TBL_CUST_EGFN_TYPE 
	;	

	SELECT [X].*
	INTO #TBL_CUST_EGFN_TYPE
	FROM ( 
		VALUES	( 1 , 'ЕГН' )
			,	( 2 , 'ЕИК/БУЛСТАТ' )
			,	( 3 , 'БАЕ' )
			,	( 4 , 'ЛНЧ' )
			,	( 5 , 'Функцоинално ЕГН' )
			,	( 6 , 'Функционално ЛНЧ (ЧФЛ)' )
			,	( 7 , 'Функционално ЕИК (МЮЛ)' ) 
			,	( 8 , 'Функционално ЕИК (ЧЮЛ)' )
			,	( 9 , 'Идентификатор за клиенти по ЗЗКИ' )
	) X([ID], [NAME])
	;

	/* 1.2 Характеристика на клиент: [DT015_CUSTOMERS_ACTIONS_TA].[CUSTOMER_CHARACTERISTIC]: enum CustomerCharacteristics : [DT015_CUSTOMERS].[CUSTOMER_CHARACTERISTIC]: */
	DROP TABLE IF EXISTS #TBL_CUSTOMER_CHARACTERISTIC
	;	
	SELECT [X].*
	INTO #TBL_CUSTOMER_CHARACTERISTIC 
	FROM ( 
		VALUES	(0,	'Банков клиент' )
			,	(1,	'Външен клиент' )
			,	(2,	'Prospect клиент' )
			,	(3,	'Действителен собственик' )
			,	(4,	'Клиент без активни продукти' )
	) X([ID], [NAME])
	;

	/* 1.3 Вид клиент: [DT015_CUSTOMERS_ACTIONS_TA].[CUSTOMER_AGE]: enum CustomerSubtypes: */
	DROP TABLE IF EXISTS #TBL_CUSTOMER_AGE
	;	
	SELECT [X].*
	INTO #TBL_CUSTOMER_AGE
	FROM (
		VALUES	(-1, 00, 999, 'Без значение' )
			,	( 1, 18, 999, 'Пълнолетно лице (над 18г.)' )
			,	( 2, 14,  17, 'Непълнолетно физическо лице (от 14г. до 18г.)' )
			,	( 3, 00,  13, 'Малолетно физическо лице (до 14г.)' )
			,	( 4, 00, 999, 'Външен клиент' )
	) X([ID], [AGE_MIN], [AGE_MAX], [NAME])
	;

	/* 1.4 Тип клиент: [PROXY_SPEC_TA].[UI_RAZPOREDITEL]: NM622 : [PROXY_SPEC].[CUSTOMER_ROLE_TYPE] */
	DROP TABLE IF EXISTS #TBL_UI_RAZPOREDITEL
	;	
	SELECT [X].*
	INTO #TBL_UI_RAZPOREDITEL
	FROM ( 
		VALUES	( 1	, 1,'Титуляр' )
			,	( 2	, 0,'Пълномощник' )
			,	( 3	, 1,'Законен представител' )
			,	( 4	,-1,'Действителен собственик' )
			,	( 5	,-1,'Трето лице' )
			,	( 6	,-1,'Картодържател' )
			,	(100,-1,'Наследник' )
			,	(101,-1,'Трето лице-представляващ' )
	) X([ID], [CND_ID], [NAME])
	;

	DROP TABLE IF EXISTS #TBL_TA_ALL_CONDITIONS
	;

	SELECT	IDENTITY(INT, 1, 1)						AS [ID]
		,	[PREV].ROW_ID							AS [PREV_ROW_ID]
		,	[CUST].[ROW_ID]							AS [CUST_ROW_ID]
		,	[DREG].ROW_ID							AS [DEAL_ROW_ID]
		,	[CORS].[ROW_ID]							AS [DREAL_CORRS_ROW_ID]		
		,	[PREV].[PROXY_ROW_ID]					AS [PREV_PROXY_ROW_ID]
		,	[PREV].TA_TYPE							AS [PREV_TA_TYPE]

		,	[CUST].[SECTOR]							AS [CUST_CND_SECTOR]
		,	[DREG].UI_STD_DOG_CODE					AS [DEAL_CND_UI_STD_DOG_CODE]
		,	[DREG].UI_CURRENCY_CODE					AS [DEAL_CND_UI_CURRENCY_CODE]
			/* DT015_CUSTOMERS */
		,	[CUST].[UNIFIED]						AS [CUST_CND_UNIFIED]
		,	[CUST].[IS_SERVICE]						AS [CUST_CND_IS_SERVICE]
		,	[CUST].[EGFN_TYPE]						AS [CUST_CND_EGFN_TYPE]
		,	[CUST].[DB_CLIENT_TYPE]					AS [CUST_CND_DB_CLIENT_TYPE_DT300]
		,	[CUST].[VALID_ID]						AS [CUST_CND_VALID_ID]	
		,	[CUST].[CUSTOMER_CHARACTERISTIC]		AS [CUST_CND_CUSTOMER_CHARACTERISTIC]
		,	[CUST].[CUSTOMER_AGE]					AS [CUST_CND_CUSTOMER_AGE]		
		,	[CUST].[PROXY_COUNT]					AS [CUST_CND_PROXY_COUNT]
		,	[CUST].IS_PROXY							AS [CUST_CND_IS_PROXY]
		,	[CUST].IS_UNIQUE						AS [CUST_CND_IS_UNIQUE]
--		,	[CUST].[HAVE_CREDIT]					AS [CUST_CND_HAVE_CREDIT]
			/* Conditions ? */
		,	[CUST].IS_ZAPOR							AS [CUST_IS_ZAPOR]
		,	[CUST].LEGAL_KIND						AS [CUST_LEGAL_KIND]
			/* PROXY_SPEC */
		,	[PSPEC].PROXY_CLIENT_ID					AS [PSPEC_PROXY_CLIENT_ID]
		,	[PSPEC].UI_RAZPOREDITEL					AS [PSPEC_CND_UI_RAZPOREDITEL]
		,	[PSPEC].UI_UNLIMITED					AS [PSPEC_CND_UI_UNLIMITED]
			/* Conditions ? */
		,	[PSPEC].UI_TAKE_BACK					AS [PSPEC__UI_TAKE_BACK]
			/* RAZPREG */
		,	[DREG].UI_INDIVIDUAL_DEAL				AS [DEAL_CND_UI_INDIVIDUAL_DEAL]
		,	[DREG].UI_NM342_CODE					AS [DEAL_CND_UI_NM342_CODE]
		,	[DREG].UI_OTHER_ACCOUNT_FOR_TAX			AS [DEAL_CND_UI_OTHER_ACCOUNT_FOR_TAX]
		,	[DREG].UI_NOAUTOTAX						AS [DEAL_CND_UI_NOAUTOTAX]
		,	[DREG].UI_DENY_MANUAL_TAX_ASSIGN		AS [DEAL_CND_UI_DENY_MANUAL_TAX_ASSIGN]
		,	[DREG].UI_CAPIT_ON_BASE_DATE_OPEN		AS [DEAL_CND_UI_CAPIT_ON_BASE_DATE_OPEN]
		,	[DREG].UI_BANK_RECEIVABLES				AS [DEAL_CND_UI_BANK_RECEIVABLES]
		,	[DREG].UI_JOINT_TYPE					AS [DEAL_CND_UI_JOINT_TYPE]
		,	[DREG].LIMIT_AVAILABILITY				AS [DEAL_CND_LIMIT_AVAILABILITY]
		,	[DREG].DEAL_STATUS						AS [DEAL_CND_DEAL_STATUS]
		,	[DREG].LIMIT_TAX_UNCOLLECTED			AS [DEAL_CND_LIMIT_TAX_UNCOLLECTED]
		,	[DREG].LIMIT_ZAPOR						AS [DEAL_CND_LIMIT_ZAPOR]
/*		,	[DREG].IS_CORR							AS [DEAL_CND_IS_CORR] */
		,	[DREG].IS_UNIQUE						AS [DEAL_CND_IS_UNIQUE]
		,	[DREG].GS_PROGRAMME_CODE				AS [DEAL_CND_GS_PROGRAMME_CODE]
		,	[DREG].GS_CARD_PRODUCT					AS [DEAL_CND_GS_CARD_PRODUCT]
		,	[DREG].GS_PRODUCT_CODE					AS [DEAL_CND_GS_PRODUCT_CODE]
			/* Conditions ? */
		,	[DREG].UI_TAX_FOR_CREATE				AS [DEAL_UI_TAX_FOR_CREATE]
		,	[DREG].TAX_UNCOLLECTED_SUM				AS [DEAL_TAX_UNCOLLECTED_SUM]
		,	[DREG].UI_INDIVIDUAL_COMBINATION_FLAG	AS [DEAL_UI_INDIVIDUAL_COMBINATION_FLAG]
			/* PREV */
		,	[PREV].RUNNING_ORDER					AS [PREV_CND_RUNNING_ORDER]
		,	[PREV].TAX_CODE							AS [PREV_CND_TAX_CODE]
		,	[PREV].PREF_CODE						AS [PREV_CND_PREF_CODE]		
		,	[PREV].REF_ID							AS [PREV_REF_ID]
			/* Conditions ? */						
		,	[PREV].UI_SUM							AS [PREV_UI_SUM]	
		,	[PREV].UI_OSN1							AS [PREV_UI_OSN1]
		,	[PREV].UI_OSN2							AS [PREV_UI_OSN2]
		,	[PREV].UI_TAX							AS [PREV_UI_TAX]
		,	[PREV].UI_CASH_COMMISSION				AS [PREV_UI_CASH_COMMISSION]
		,	[PREV].UI_UNSORTED_BANKNOTES			AS [PREV_UI_UNSORTED_BANKNOTES]
		,	[PREV].UI_ALBUM_CODE					AS [PREV_UI_ALBUM_CODE]
		,	[PREV].UI_PREVIEW_DOC_PRINT				AS [PREV_UI_PREVIEW_DOC_PRINT]
		,	[PREV].ZMIP								AS [PREV_ZMIP]
		,	[PREV].TAX_SUM							AS [PREV_TAX_SUM]
			/* DEALS_CORR */
		,	[CORS].[DEAL_ROW_ID]					AS [CORS_ROW_ID]
		,	[CORS].[UI_CORR_TYPE]					AS [CORS_CND_UI_CORR_TYPE]
		,	[CORS].[CURRENCY]						AS [CORS_CND_CURRENCY]
		,	[CORS].[LIMIT_AVAILABILITY]				AS [CORS_CND_LIMIT_AVAILABILITY]
		,	[CORS].[LIMIT_TAX_UNCOLLECTED]			AS [CORS_LIMIT_TAX_UNCOLLECTED]

	INTO #TBL_TA_ALL_CONDITIONS
	FROM dbo.[PREV_COMMON_TA] [PREV] WITH(NOLOCK)
	INNER JOIN dbo.[RAZPREG_TA] [DREG] WITH(NOLOCK)
		on [PREV].REF_ID = [DREG].ROW_ID
	INNER JOIN dbo.[DT015_CUSTOMERS_ACTIONS_TA] [CUST] WITH(NOLOCK)
		on [DREG].REF_ID = [CUST].ROW_ID
	LEFT JOIN dbo.[DEALS_CORR_TA] [CORS] WITH(NOLOCK)
		on [CORS].REF_ID = [DREG].ROW_ID		
	LEFT JOIN dbo.[PROXY_SPEC_TA] as [PSPEC] WITH(NOLOCK)
		on [CUST].ROW_ID =[PSPEC].REF_ID
	WHERE [PREV].[TA_TYPE] LIKE N'%CashPaymentCA%BETA%'
		AND [PREV].[ROW_ID] = IsNull( NULL,  [PREV].[ROW_ID] )
	;

	DECLARE @DateAcc date = @CurrAccountDate
	;

	DROP TABLE IF EXISTS #TBL_TA_CONDITIONS
	;

	SELECT	[C].[ID] 
		/* CUSTOMER CONDITIONS: */
		,	[C].CUST_CND_SECTOR							AS [SECTOR]
		,	[C].CUST_CND_UNIFIED						AS [UNIFIED]
		,	[C].CUST_CND_IS_SERVICE						AS [IS_SERVICE]
		,	[C].CUST_CND_EGFN_TYPE						AS [EGFN_TYPE]
		,	[NM1].EGFN_TYPE_CODE						AS [EGFN_TYPE_CODE]
		,	[C].[CUST_CND_DB_CLIENT_TYPE_DT300]			AS [DB_CLIENT_TYPE_DT300]
		,	[C].[CUST_CND_VALID_ID]						AS [VALID_ID]
		,	[C].[CUST_CND_CUSTOMER_CHARACTERISTIC]		AS [CUSTOMER_CHARACTERISTIC]
		,	[NM2].[CUSTOMER_CHARACTERISTIC_CODE]		AS [CUSTOMER_CHARACTERISTIC_CODE]
		,	[C].[CUST_CND_CUSTOMER_AGE]					AS [CUSTOMER_AGE]
		,	[NM3].[CUSTOMER_AGE_MIN]					AS [CUSTOMER_AGE_MIN]
		,	[NM3].[CUSTOMER_AGE_MAX]					AS [CUSTOMER_AGE_MAX]
		,	[C].[CUST_CND_IS_PROXY]						AS [IS_PROXY]
		,	[C].[CUST_CND_IS_UNIQUE]					AS [IS_UNIQUE_CUSTOMER]
--		,	[C].[CUST_CND_HAVE_CREDIT]					AS [HAVE_CREDIT]
		/* PROXY CONDITIONS: */
		,	[C].[PSPEC_CND_UI_RAZPOREDITEL]				AS [UI_RAZPOREDITEL]
		,	[C].[PSPEC_CND_UI_UNLIMITED]				AS [UI_UNLIMITED]

		/* DEAL CONDITIONS: */
		,	[C].[DEAL_CND_UI_STD_DOG_CODE]				AS [UI_STD_DOG_CODE]
		,	[C].[DEAL_CND_UI_INDIVIDUAL_DEAL]			AS [UI_INDIVIDUAL_DEAL]
		,	[C].[DEAL_CND_UI_NM342_CODE]				AS [UI_NM342_CODE]
		,	[C].[DEAL_CND_UI_CURRENCY_CODE]				AS [UI_CURRENCY_CODE]
		,	[C].[DEAL_CND_UI_OTHER_ACCOUNT_FOR_TAX]		AS [UI_OTHER_ACCOUNT_FOR_TAX]
		,	[C].[DEAL_CND_UI_NOAUTOTAX]					AS [UI_NOAUTOTAX]
		,	[C].[DEAL_CND_UI_DENY_MANUAL_TAX_ASSIGN]	AS [UI_DENY_MANUAL_TAX_ASSIGN]
		,	[C].[DEAL_CND_UI_CAPIT_ON_BASE_DATE_OPEN]	AS [UI_CAPIT_ON_BASE_DATE_OPEN]
		,	[C].[DEAL_CND_UI_BANK_RECEIVABLES]			AS [UI_BANK_RECEIVABLES]
		,	[C].[DEAL_CND_UI_JOINT_TYPE]				AS [UI_JOINT_TYPE]
		,	[C].[DEAL_CND_LIMIT_AVAILABILITY]			AS [LIMIT_AVAILABILITY]
		,	[C].[DEAL_CND_DEAL_STATUS]					AS [DEAL_STATUS]
		,	[C].[DEAL_CND_LIMIT_TAX_UNCOLLECTED]		AS [LIMIT_TAX_UNCOLLECTED]
		,	[C].[DEAL_CND_LIMIT_ZAPOR]					AS [LIMIT_ZAPOR]
		,	[C].[DEAL_CND_IS_UNIQUE]					AS [IS_UNIQUE_DEAL]

		/* CORS CONDITIONS: */
		,	[C].[PREV_CND_TAX_CODE]						AS [TAX_CODE]
		,	[C].[PREV_CND_PREF_CODE]					AS [PREF_CODE]		

		/* GROUP SALES CONDITIONS: */
		,	[C].[DEAL_CND_GS_PROGRAMME_CODE]			AS [GS_PROGRAMME_CODE]
		,	[C].[DEAL_CND_GS_CARD_PRODUCT]				AS [GS_CARD_PRODUCT]
		,	[C].[DEAL_CND_GS_PRODUCT_CODE]				AS [GS_PRODUCT_CODE]

	FROM #TBL_TA_ALL_CONDITIONS [C]
	OUTER APPLY (
		SELECT TOP (1) [NV].[ID] AS [EGFN_TYPE_CODE]
		FROM [#TBL_CUST_EGFN_TYPE] [NV] WITH(NOLOCK)
		WHERE [NV].[NAME] = [C].CUST_CND_EGFN_TYPE
	) [NM1]
	OUTER APPLY (
		SELECT TOP (1) [NV].[ID] AS [CUSTOMER_CHARACTERISTIC_CODE]
		FROM [#TBL_CUSTOMER_CHARACTERISTIC] [NV] WITH(NOLOCK)
		WHERE [NV].[NAME] = [C].CUST_CND_CUSTOMER_CHARACTERISTIC
	) [NM2]
	OUTER APPLY (
		SELECT TOP (1) 
				[NV].[AGE_MIN]	AS [CUSTOMER_AGE_MIN]
			,	[NV].[AGE_MAX]	AS [CUSTOMER_AGE_MAX]
			,	DATEADD(yy, [NV].[AGE_MIN], @DateAcc) as [CUSTOMER_BIRTH_DATE_MIN]
			,	DATEADD(yy, [NV].[AGE_MAX], @DateAcc) as [CUSTOMER_BIRTH_DATE_MAX]			
		FROM #TBL_CUSTOMER_AGE [NV] WITH(NOLOCK)
		WHERE [NV].[NAME] = [C].[CUST_CND_CUSTOMER_AGE]
	) [NM3]
	OUTER APPLY (
		SELECT TOP (1) [NV].[ID] AS [EGFN_TYPE_CODE]
		FROM [#TBL_CUST_EGFN_TYPE] [NV] WITH(NOLOCK)
		WHERE [NV].[NAME] = [C].CUST_CND_EGFN_TYPE
	) [NM4]
	;

	DROP TABLE IF EXISTS ##TBL_CONDITIONS
	;

	SELECT * 
	INTO ##TBL_CONDITIONS
	FROM #TBL_TA_CONDITIONS
END
GO
