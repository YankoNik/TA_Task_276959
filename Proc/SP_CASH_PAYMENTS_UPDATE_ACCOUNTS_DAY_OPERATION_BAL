
/********************************************************************************************************/
/* Процедура за актуализация на дневните салда в TA базата, след обработка на тестови случай */
DROP PROCEDURE IF EXISTS dbo.[SP_CASH_PAYMENTS_UPDATE_ACCOUNTS_DAY_OPERATION_BAL]
GO

CREATE PROCEDURE dbo.[SP_CASH_PAYMENTS_UPDATE_ACCOUNTS_DAY_OPERATION_BAL]
(
	@TestCaseRowID  int
,   @UpdateMode     int = 1
,   @TraceMode      int = 0
)
AS 
begin

	declare @LogTraceInfo int = @TraceMode,	@LogBegEndProc int = 1,	@TimeBeg datetime = GetDate();
	;
	declare @Msg nvarchar(max) = N'', @Sql nvarchar(4000) = N'', @Ret int = 0
        ,	@RowIdStr nvarchar(8) = STR(@TestCaseRowID,LEN(@TestCaseRowID),0)
	;
	/************************************************************************************************************/
	/* 1. Log Begining of Procedure execution */
	if @LogBegEndProc = 1 
	begin	
		select @Sql = 'dbo.[SP_CASH_PAYMENTS_UPDATE_ACCOUNTS_DAY_OPERATION_BAL] @RowIdStr = '+@RowIdStr
			,  @Msg =  '*** Begin Execute Proc ***: dbo.[SP_CASH_PAYMENTS_UPDATE_ACCOUNTS_DAY_OPERATION_BAL]'
		;
		exec dbo.SP_SYS_LOG_PROC @@PROCID, @Sql, @Msg
	end

	/************************************************************************************************************/
	/* 2. Find TA Conditions: */
	if not exists (select * from dbo.[VIEW_CASH_PAYMENTS_CONDITIONS] with(nolock) where [ROW_ID] = IsNull(@TestCaseRowID, -1))
	begin 
		select  @Msg = N'Error not found condition with [ROW_ID] :' + @RowIdStr
			,	@Sql = N'select * from dbo.[VIEW_CASH_PAYMENTS_CONDITIONS] with(nolock) where [ROW_ID] = IsNull('+@RowIdStr+', -1)'
		;
		exec dbo.SP_SYS_LOG_PROC @@PROCID, @Sql, @Msg
		return -1;
	end
	
    declare @DB_TYPE         varchar(256) = N''
        ,   @DEAL_ROW_ID     int = -1 /* Base accoutn row id */
        ,   @CORS_ROW_ID     int = -1 /* Tax accoutn row id */
        ,   @DEAL_BEN_ROW_ID int = -1 /* Ben accoutn row id */
    ;
	select	@DB_TYPE            = [DB_TYPE]
        ,   @DEAL_ROW_ID        = IsNull([DEAL_ROW_ID], -1)
		,	@CORS_ROW_ID        = IsNull([CORS_ROW_ID], -1)
        ,   @DEAL_BEN_ROW_ID    = IsNull([DEAL_BEN_ROW_ID],-1)
	from dbo.[VIEW_CASH_PAYMENTS_CONDITIONS] with(nolock) where [ROW_ID] = IsNull(@TestCaseRowID, -1)
	;

	/************************************************************************************************************/
	/* 3. Get Datasources: */
	declare @OnlineSqlServerName sysname = N'',	@OnlineSqlDataBaseName sysname = N'', @DB_ALIAS sysname = N'VCS_OnlineDB'
	;
	exec @Ret = dbo.[SP_CASH_PAYMENTS_GET_DATASOURCE] @DB_TYPE, @DB_ALIAS, @OnlineSqlServerName out, @OnlineSqlDataBaseName out
	if @Ret <> 0
	begin
		select  @Msg = N'Error execute proc, Error code: '+str(@Ret,len(@Ret),0)
					+' ; Result: @OnlineSqlServerName = "'+@OnlineSqlServerName+'", @OnlineSqlDataBaseName = "'+@OnlineSqlDataBaseName+'"'
			,	@Sql = N'exec dbo.[SP_SYS_GET_ACCOUNT_DATE_FROM_DB] @DB_TYPE = '
					+ @DB_TYPE  +N', @DB_ALIAS = '+ @DB_ALIAS +N', @OnlineSqlServerName OUT, @OnlineSqlDataBaseName OUT'
		;
		exec dbo.SP_SYS_LOG_PROC @@PROCID, @Sql, @Msg
		return -2;
	end

	if @LogTraceInfo = 1
	begin 
		select  @Msg = N'After: exec dbo.[SP_CASH_PAYMENTS_GET_DATASOURCE], @OnlineSqlServerName: ' +@OnlineSqlServerName
                    +', @OnlineSqlDataBaseName = '+@OnlineSqlDataBaseName+' '
			,	@Sql = N'exec dbo.[SP_SYS_GET_ACCOUNT_DATE_FROM_DB] @DB_TYPE = ' + @DB_TYPE 
                    + N', @DB_ALIAS = '+ @DB_ALIAS +N', @OnlineSqlServerName OUT, @OnlineSqlDataBaseName OUT'
		;
		exec dbo.SP_SYS_LOG_PROC @@PROCID, @Sql, @Msg
	end

	/************************************************************************************************************/
	/* 4. Load Accounts from test cases: */
	declare @TBL_RESULT table
	(
		[ACCOUNT]		varchar(64)
	,	[PART_TYPE]		int
	,	[DAY_SALDO]		float
    );

    declare @Row_id     int = -1
        ,   @Deal_Type  int = 1
        ,   @Deal_Num   int = -1
        ,   @Account    varchar(64) = N''
        ,   @Acc_Type   int = 3 /* Pasive */
        ,   @UpdAccont  int = 0;
    ;

    declare @OutputUpdateTbl Table ( [ACCOUNT] varchar(64), [DAY_SALDO] float )
    ;

    /* Main Account: */
    if IsNull(@DEAL_ROW_ID,-1) > 0 
    begin 
        select  @Row_id     = [ROW_ID] 
            ,   @Deal_Type  = 1
            ,   @Deal_Num   = [UI_DEAL_NUM]
            ,   @Account    = replace([DB_ACCOUNT], ' ','')
            ,   @Acc_Type   = 3 /* Pasive */
        from dbo.[RAZPREG_TA] [REG] with(nolock)
        where [REG].[ROW_ID] in ( @DEAL_ROW_ID )
        ;
        begin try 
            insert into @TBL_RESULT ( [ACCOUNT], [PART_TYPE], [DAY_SALDO] )
            exec @Ret = dbo.[SP_LOAD_ONLINE_ACCOUNT_DAY_OPERATION_BALANCE] @OnlineSqlServerName
                , @OnlineSqlDataBaseName
                , @Account
                , @Acc_Type
                , @LogTraceInfo
        end try 
        begin catch 
    		select @Msg = dbo.FN_GET_EXCEPTION_INFO();
	    	exec dbo.SP_SYS_LOG_PROC @@PROCID, 'insert into @TBL_RESULT ... for Main account', @Msg;
            return 1;
        end catch 

        if @Ret <> 0
        begin 
            select @Sql = 'exec @Ret = Sql: dbo.[SP_LOAD_ONLINE_ACCOUNT_DAY_OPERATION_BALANCE] '
                    + '@OnlineSqlServerName = '+ @OnlineSqlServerName
                    + '@OnlineSqlDataBaseName = '+ @OnlineSqlDataBaseName
                    + '@Account = '+ @Account
                    + '@AccType = '+ str(@Acc_Type,len(@Acc_Type), 0)
                    + '@LogTrace = 1'
                , @Msg = 'Error '+str(@Ret,len(@Ret),0)+' execute sql for test case ID: '+@RowIdStr
                    + ', Main account: '+@Account 
                    + ', @DEAL_ROW_ID = '+str(@DEAL_ROW_ID,len(@DEAL_BEN_ROW_ID),0)
            ;
            exec dbo.SP_SYS_LOG_PROC @@PROCID, @Sql, @Msg
        end 
        else 
        begin 
            -- trace
            if @LogTraceInfo = 1 SELECT * FROM @TBL_RESULT

            if @UpdateMode = 1 and exists (select * from @TBL_RESULT where [ACCOUNT] = @Account)
                update [D]
                    set [DAY_OPERATION_BALANCE] = [S].[DAY_SALDO]
                    output [S].[ACCOUNT], INSERTED.[DAY_OPERATION_BALANCE] into @OutputUpdateTbl
                from dbo.[AGR_CASH_PAYMENTS_DEALS] [D]
                inner join @TBL_RESULT [S]
                    on [S].[ACCOUNT] = [D].[DEAL_ACCOUNT]
            ;
            
            if @@error = 0 and @LogTraceInfo = 1
            begin             
                select  @Msg = 'Trace: Success update main account: ' + [ACCOUNT] + '; day balance: ' +str([DAY_SALDO], 12, 2)
                    ,   @Sql = N'update [D] set [DAY_OPERATION_BALANCE] = [F].[DAY_SALDO] from [AGR_CASH_PAYMENTS_DEALS] [D] ...'
                from @OutputUpdateTbl
                where [ACCOUNT] = @Account
                ;
            	exec dbo.SP_SYS_LOG_PROC @@PROCID, @Sql, @Msg
            end            
        end 
    end

    /* Ben Account: */    
    if IsNull(@DEAL_BEN_ROW_ID,-1) > 0 and (IsNull(@DEAL_ROW_ID,-1) != IsNull(@DEAL_BEN_ROW_ID,-2))
    begin 
        select  @Row_id     = [ROW_ID] 
            ,   @Deal_Type  = 1
            ,   @Deal_Num   = [UI_DEAL_NUM]
            ,   @Account    = replace([DB_ACCOUNT], ' ','')
            ,   @Acc_Type   = 3 /* Pasive */
        from dbo.[RAZPREG_TA] [REG] with(nolock)
        where [REG].[ROW_ID] in ( @DEAL_BEN_ROW_ID )
        ;
        begin try 
            insert into @TBL_RESULT ( [ACCOUNT], [PART_TYPE], [DAY_SALDO] )
            exec @Ret = dbo.[SP_LOAD_ONLINE_ACCOUNT_DAY_OPERATION_BALANCE] @OnlineSqlServerName
                , @OnlineSqlDataBaseName
                , @Account
                , @Acc_Type
                , @LogTraceInfo
        end try 
        begin catch 
    		select @Msg = dbo.FN_GET_EXCEPTION_INFO();
	    	exec dbo.SP_SYS_LOG_PROC @@PROCID, 'insert into @TBL_RESULT ... for Beneficiary account', @Msg
		    return 2;
        end catch 

        if @Ret <> 0
        begin 
            select @Sql = 'exec @Ret = Sql: dbo.[SP_LOAD_ONLINE_ACCOUNT_DAY_OPERATION_BALANCE] '
                    + '@OnlineSqlServerName = '+ @OnlineSqlServerName
                    + '@OnlineSqlDataBaseName = '+ @OnlineSqlDataBaseName
                    + '@Account = '+ @Account
                    + '@AccType = '+ str(@Acc_Type,len(@Acc_Type), 0)
                    + '@LogTrace = 1'
                , @Msg = 'Error '+str(@Ret,len(@Ret),0)+' execute sql for test case ID: '+@RowIdStr
                    + ', Beneficiary account: '+@Account 
                    + ', @DEAL_BEN_ROW_ID = '+str(@DEAL_BEN_ROW_ID,len(@DEAL_BEN_ROW_ID),0)
            ;
            exec dbo.SP_SYS_LOG_PROC @@PROCID, @Sql, @Msg
        end 
        else 
        begin 
            -- trace
            if @LogTraceInfo = 1 SELECT * FROM @TBL_RESULT
            
            if @UpdateMode = 1 and exists (select * from @TBL_RESULT where [ACCOUNT] = @Account)
                update [D]
                    set [DAY_OPERATION_BALANCE] = [S].[DAY_SALDO]
                    output [S].[ACCOUNT], INSERTED.[DAY_OPERATION_BALANCE] into @OutputUpdateTbl
                from dbo.[AGR_CASH_PAYMENTS_DEALS] [D]
                inner join @TBL_RESULT [S]
                    on [S].[ACCOUNT] = [D].[DEAL_ACCOUNT]
            ;

            if @@error = 0 and @LogTraceInfo = 1
            begin
                select  @Msg = 'Trace: Success update beneficiary account: ' + [ACCOUNT] + '; day balance: ' +str([DAY_SALDO], 12, 2)
                    ,   @Sql = N'update [D] set [DAY_OPERATION_BALANCE] = [F].[DAY_SALDO] from [AGR_CASH_PAYMENTS_DEALS] [D] ...'
                from @OutputUpdateTbl
                where [ACCOUNT] = @Account
                ;
                exec dbo.SP_SYS_LOG_PROC @@PROCID, @Sql, @Msg
            end
        end
    end

    /* Corespondent Account: */
    if IsNull(@CORS_ROW_ID,-1) > 0
    begin 
        select  @Row_id     = [ROW_ID] 
            ,   @Deal_Type  = [UI_DEAL_TYPE]
            ,   @Deal_Num   = [DEAL_NUM]
            ,   @Account    = replace([UI_CORR_ACCOUNT], ' ','')
            ,   @Acc_Type   = 3 /* Pasive */
        from dbo.[DEALS_CORR_TA] [REG] with(nolock)
        where [REG].[ROW_ID] in ( @CORS_ROW_ID )
        ;
        begin try 
            insert into @TBL_RESULT ( [ACCOUNT], [PART_TYPE], [DAY_SALDO] )
            exec @Ret = dbo.[SP_LOAD_ONLINE_ACCOUNT_DAY_OPERATION_BALANCE] @OnlineSqlServerName
                , @OnlineSqlDataBaseName
                , @Account
                , @Acc_Type
                , @LogTraceInfo
        end try 
        begin catch 
    		select @Msg = dbo.FN_GET_EXCEPTION_INFO();
	    	exec dbo.SP_SYS_LOG_PROC @@PROCID, 'insert into @TBL_RESULT ... for Correspondence account', @Msg
		    return 3;
        end catch

        if @Ret <> 0
        begin 
            select @Sql = 'exec @Ret = Sql: dbo.[SP_LOAD_ONLINE_ACCOUNT_DAY_OPERATION_BALANCE] '
                    + '@OnlineSqlServerName = '+ @OnlineSqlServerName
                    + '@OnlineSqlDataBaseName = '+ @OnlineSqlDataBaseName
                    + '@Account = '+ @Account
                    + '@AccType = '+ str(@Acc_Type,len(@Acc_Type), 0)
                    + '@LogTrace = 1'
                , @Msg = 'Error '+str(@Ret,len(@Ret),0)+' execute sql for test case ID: '+@RowIdStr
                    + ', Correspondence account: '+@Account 
                    + ', @CORS_ROW_ID = '+str(@CORS_ROW_ID,len(@CORS_ROW_ID),0)
            ;
            exec dbo.SP_SYS_LOG_PROC @@PROCID, @Sql, @Msg
        end 
        else 
        begin
            -- trace
            if @LogTraceInfo = 1 SELECT * FROM @TBL_RESULT

            if @UpdateMode = 1 and exists (select * from @TBL_RESULT where [ACCOUNT] = @Account)
                update [D]
                    set [DAY_OPERATION_BALANCE] = [S].[DAY_SALDO]
                    output [S].[ACCOUNT], INSERTED.[DAY_OPERATION_BALANCE] into @OutputUpdateTbl
                from dbo.[AGR_CASH_PAYMENTS_DEALS] [D]
                inner join @TBL_RESULT [S]
                    on [S].[ACCOUNT] = [D].[DEAL_ACCOUNT]
            ;

            if @@error = 0 and @LogTraceInfo = 1
            begin 
                select  @Msg = 'Trace: Success update correspondence account: ' + [ACCOUNT] + '; day balance: ' +str([DAY_SALDO], 12, 2)
                    ,   @Sql = N'update [D] set [DAY_OPERATION_BALANCE] = [F].[DAY_SALDO] from [AGR_CASH_PAYMENTS_DEALS] [D] ...'
                from @OutputUpdateTbl
                where [ACCOUNT] = @Account
                ;
                exec dbo.SP_SYS_LOG_PROC @@PROCID, @Sql, @Msg
            end
        end
    end

    -- trace
    if @LogTraceInfo = 1 SELECT * FROM @OutputUpdateTbl

	/************************************************************************************************************/
	/* Log End Of Procedure */
	if @LogBegEndProc = 1
	begin 
		select @Msg = 'Duration: '+ dbo.FN_GET_TIME_DIFF(@TimeBeg, GetDate()) + ', TA Row ID: ' + @RowIdStr;
		exec dbo.SP_SYS_LOG_PROC @@PROCID, @Msg, '*** End Execute Proc ***: dbo.dbo.[SP_CASH_PAYMENTS_UPDATE_ACCOUNTS_DAY_OPERATION_BAL]'
	end

    return 0;
end    
GO